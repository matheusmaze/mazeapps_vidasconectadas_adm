{"version":3,"sources":["webpack:///./src/views/Padrinhos/Dashboard/index.vue?b397","webpack:///./src/views/Padrinhos/Dashboard/index.vue","webpack:///./src/views/Padrinhos/Dashboard/index.vue?d8a7","webpack:///./src/views/Padrinhos/Dashboard/index.vue?0b97"],"names":["class","status","item","id","icon","color","label","name","number","qtd","components","Card","setup","headers","key","value","date","options","action","param","alert","loader","router","users","data","revenue","ordersByUsers","ordersByHours","Day","Number","Hour","usersPerDay","ticket","mes","optionsGrafico","scales","yAxes","ticks","beginAtZero","event","reconstroiGraficos","graficoFaturamento","document","getElementById","type","labels","datasets","backgroundColor","borderColor","borderWidth","graficoTicket","graficoClientes","hours","orders","forEach","order","hs","toString","push","graficoPedidos","days","newUsers","user","d","graficoNovosUsuarios","open","response","donators","donations","close","localStorage","removeItem","dataAtual","Date","dataIso","toISOString","dataComMes","split","parseFloat","money","card","render","__scopeId"],"mappings":"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","file":"js/chunk-81110b7c.5af0b4ac.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./index.vue?vue&type=style&index=0&id=495a625b&scoped=true&lang=css\"","<template>\r\n  <div class=\"home w-full\">\r\n    <h2 class=\"my-6 text-2xl font-medium dark:text-gray-200 text-primary\">\r\n      Dashboard\r\n    </h2>\r\n    <!-- <Alert\r\n      label=\"Você recebeu mais de 200 visitas na ultima semana.\"\r\n      icon=\"danger\"\r\n      color=\"primary\"\r\n      @click=\"event\"\r\n    /> -->\r\n    <div class=\"container flex mb-9\">\r\n      <template v-for=\"item in status\" :key=\"item.id\">\r\n        <Card\r\n          v-if=\"item.icon\"\r\n          color=\"secondary\"\r\n          :icon=\"item.icon\"\r\n          :label=\"item.name\"\r\n          :number=\"item.qtd\"\r\n        />\r\n      </template>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <!-- <div class=\"card shadow-lg border rounded-lg p-8 bg-white mt-9\">\r\n      <div class=\"w-full\">\r\n        <div class=\"flex-3 w-full\">\r\n          <h3 class=\"font-bold text-primary\">Gráficos de Inteligência</h3>\r\n          <span class=\"text-sm text-gray-500\"\r\n            >Aqui você pode observar todos os itens que foram buscados por\r\n            usuários mas não foram encontrados no sistema\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"my-9\">\r\n          <Input\r\n            type=\"select\"\r\n            label=\"Meses\"\r\n            :data=\"[\r\n              { label: 'Janeiro', value: 1 },\r\n              { label: 'Fevereiro', value: 2 },\r\n              { label: 'Março', value: 3 },\r\n              { label: 'Abril', value: 4 },\r\n              { label: 'Maio', value: 5 },\r\n              { label: 'Junho', value: 6 },\r\n              { label: 'Julho', value: 7 },\r\n              { label: 'Agosto', value: 8 },\r\n              { label: 'Setembro', value: 9 },\r\n              { label: 'Outubro', value: 10 },\r\n              { label: 'Novembro', value: 11 },\r\n              { label: 'Dezembro', value: 12 },\r\n            ]\"\r\n            v-model=\"mes\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <div id=\"graphs\" class=\"flex w-full my-5\">\r\n            <div class=\"flex-1  w-1/3\">\r\n              <p class=\"text-sm text-center\">Faturamento</p>\r\n              <Chart\r\n                chartId=\"1\"\r\n                type=\"doughnut\"\r\n                :labels=\"['Dinheiro', 'Cartão']\"\r\n                :data=\"revenue\"\r\n              />\r\n            </div>\r\n            <div class=\"flex-1\">\r\n              <p class=\"text-sm text-center\">Ticket médio do pedido</p>\r\n              <Chart\r\n                chartId=\"2\"\r\n                type=\"doughnut\"\r\n                :labels=\"['Entrega', 'Delivery']\"\r\n                :data=\"ticket\"\r\n              />\r\n            </div>\r\n            <div class=\"flex-1 \">\r\n              <p class=\"text-sm text-center\">Pedidos de clientes</p>\r\n              <Chart\r\n                chartId=\"3\"\r\n                type=\"doughnut\"\r\n                :labels=\"['Novos', 'Antigos']\"\r\n                :data=\"ordersByUsers\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"my-5\">\r\n            <p class=\"text-sm text-center\">Pedidos por hora</p>\r\n            <Chart\r\n              chartId=\"4\"\r\n              type=\"line\"\r\n              label=\"Pedidos por Hora\"\r\n              :labels=\"['']\"\r\n              :data=\"[]\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"my-5\">\r\n            <p class=\"text-sm text-center\">Novos cadastros por dia</p>\r\n            <Chart\r\n              chartId=\"5\"\r\n              type=\"line\"\r\n              label=\"Novos Cadastros\"\r\n              :labels=\"['']\"\r\n              :data=\"[]\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"flex-3 w-full my-8\">\r\n          <h3 class=\"font-bold text-primary\">Aniversariantes</h3>\r\n          <span class=\"text-sm text-gray-500\"\r\n            >Dados sobre os usuários que fazem aniversario no mês.\r\n          </span>\r\n        </div>\r\n        <DataTable\r\n          :headers=\"headers\"\r\n          :data=\"data.birthdays\"\r\n          :options=\"options\"\r\n          color=\"primary\"\r\n        />\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, inject, onMounted, ref, watch } from \"vue\";\r\nimport Card from \"../../../components/Elements/Card.vue\";\r\n// import Chart from \"../../../components/Chart/Chart.vue\";\r\n// import Input from \"../../../components/Elements/Input.vue\";\r\n// import DataTable from \"../../../components/Elements/Datatable.vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { GET } from \"../../../services/api\";\r\nimport ChartJs from \"chart.js\";\r\ninterface LoadImplements {\r\n  open: Function;\r\n  close: Function;\r\n}\r\n\r\nexport default defineComponent({\r\n  name: \"Home\",\r\n  components: {\r\n    Card,\r\n    // Chart,\r\n    // Input,\r\n    // DataTable,\r\n  },\r\n\r\n  setup() {\r\n    const headers = [\r\n      { key: \"Id\", value: \"id\" },\r\n      { key: \"Nome\", value: \"name\" },\r\n      { key: \"E-mail\", value: \"email\" },\r\n      { key: \"Data de aniversário\", value: \"birthday\", date: true },\r\n      { key: \"Ultimo pedido\", value: \"pedido\" },\r\n      { key: \"Data do pedido\", value: \"pedido\" },\r\n      { key: \"Options\", value: \"\" },\r\n    ];\r\n\r\n    const options = [{ icon: \"eye\", action: (param) => alert(param) }];\r\n\r\n    const loader: LoadImplements = inject(\"loading\") as LoadImplements;\r\n    const router = useRouter();\r\n    const users = ref([]);\r\n    const donations = ref([]);\r\n    const status = ref([\r\n      {\r\n        // color: \"#e823e5\",\r\n        // \"created_at\": null,\r\n        icon: \"user\",\r\n        id: 1,\r\n        name: \"Doadores\",\r\n        qtd: 0,\r\n        // \"updated_at\": null,\r\n      },\r\n      {\r\n        // color: \"#e823e5\",\r\n        // \"created_at\": null,\r\n        icon: \"card-hearts\",\r\n        id: 3,\r\n        name: \"Doações\",\r\n        qtd: 0,\r\n        // \"updated_at\": null,\r\n      },\r\n    ]);\r\n\r\n    const data = ref({});\r\n\r\n    const revenue = ref([0, 0]);\r\n    const ordersByUsers = ref([0, 0]);\r\n    const ordersByHours = ref([\r\n      {\r\n        Day: Number,\r\n        Hour: Number,\r\n        [\"count_orders\"]: Number,\r\n      },\r\n    ]);\r\n    const usersPerDay = ref([\r\n      {\r\n        Day: Number,\r\n        [\"new_users\"]: Number,\r\n      },\r\n    ]);\r\n\r\n    const ticket = ref([0, 0]);\r\n\r\n    const mes = ref();\r\n\r\n    const optionsGrafico = {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    const event = () => {\r\n      alert(\"ok\");\r\n    };\r\n\r\n    const reconstroiGraficos = () => {\r\n      const graficoFaturamento = document.getElementById(\r\n        \"1\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n\r\n      new ChartJs(graficoFaturamento, {\r\n        type: \"doughnut\",\r\n        data: {\r\n          labels: [\"Dinheiro\", \"Cartão\"],\r\n          datasets: [\r\n            {\r\n              label: `Quantidade de Faturamento`,\r\n              data: revenue.value,\r\n              backgroundColor: [\r\n                \"#1C74B4\",\r\n                \"#1C74B4aa\",\r\n                \"#1C74B4bb\",\r\n                \"#1C74B4cc\",\r\n              ],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n\r\n      const graficoTicket = document.getElementById(\r\n        \"2\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n\r\n      new ChartJs(graficoTicket, {\r\n        type: \"doughnut\",\r\n        data: {\r\n          labels: [\"Retirada\", \"Delivery\"],\r\n          datasets: [\r\n            {\r\n              label: `Quantidade de Entregas`,\r\n              data: ticket.value,\r\n              backgroundColor: [\r\n                \"#1C74B4\",\r\n                \"#1C74B4aa\",\r\n                \"#1C74B4bb\",\r\n                \"#1C74B4cc\",\r\n              ],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n\r\n      const graficoClientes = document.getElementById(\r\n        \"3\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n      new ChartJs(graficoClientes, {\r\n        type: \"doughnut\",\r\n        data: {\r\n          labels: [\"Novos\", \"Antigos\"],\r\n          datasets: [\r\n            {\r\n              label: `Quantidade de Clientes`,\r\n              data: ordersByUsers.value,\r\n              backgroundColor: [\r\n                \"#1C74B4\",\r\n                \"#1C74B4aa\",\r\n                \"#1C74B4bb\",\r\n                \"#1C74B4cc\",\r\n              ],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n\r\n      const hours: Array<string> = [];\r\n      const orders: Array<any> = [];\r\n\r\n      ordersByHours.value.forEach((order) => {\r\n        const hs = order.Hour.toString();\r\n        hours.push(hs);\r\n        orders.push(order[\"count_orders\"]);\r\n      });\r\n\r\n      const graficoPedidos = document.getElementById(\r\n        \"4\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n      new ChartJs(graficoPedidos, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: hours,\r\n          datasets: [\r\n            {\r\n              label: `Quantidade de Pedidos por hora`,\r\n              data: orders,\r\n              backgroundColor: [\"rgba(0,0,0,0)\"],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n\r\n      const days: Array<string> = [];\r\n      const newUsers: Array<any> = [];\r\n\r\n      usersPerDay.value.forEach((user) => {\r\n        const d = user.Day.toString();\r\n        days.push(d);\r\n        newUsers.push(user[\"new_users\"]);\r\n      });\r\n\r\n      const graficoNovosUsuarios = document.getElementById(\r\n        \"5\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n      new ChartJs(graficoNovosUsuarios, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: days,\r\n          datasets: [\r\n            {\r\n              label: `Usuários novos`,\r\n              data: newUsers,\r\n              backgroundColor: [\"rgba(0,0,0,0)\"],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n    };\r\n\r\n    onMounted(async () => {\r\n      loader.open();\r\n      \r\n      try {\r\n        const response = await GET(`/users/dashboard/cards`);\r\n        status.value[0].qtd = response.donators;\r\n        status.value[1].qtd = response.donations;\r\n        loader.close();\r\n      } catch (e) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('info');\r\n        router.push('/login');\r\n        loader.close();\r\n      }\r\n    });\r\n\r\n    watch(\r\n      () => mes.value,\r\n      async (mes) => {\r\n        const dataAtual = new Date();\r\n        const dataIso = dataAtual.toISOString();\r\n        const dataComMes = `${dataIso.split(\"-\")[0]}-${mes}-${\r\n          dataIso.split(\"-\")[2]\r\n        }`;\r\n        const response = await GET(`dashboard/${dataComMes}`);\r\n        data.value = response;\r\n        revenue.value[0] = parseFloat(response.revenue.money);\r\n        revenue.value[1] = parseFloat(response.revenue.card);\r\n        ordersByUsers.value[0] = response[\"orders_by_user\"][\"new_users\"];\r\n        ordersByUsers.value[1] = response[\"orders_by_user\"][\"old_users\"];\r\n        ordersByHours.value = response[\"orders_by_hour\"];\r\n        usersPerDay.value = response[\"new_users_per_day\"];\r\n        reconstroiGraficos();\r\n      }\r\n    );\r\n\r\n    return {\r\n      event,\r\n      data,\r\n      headers,\r\n      options,\r\n      users,\r\n      status,\r\n      revenue,\r\n      ticket,\r\n      ordersByUsers,\r\n      mes,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n  .container{\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n  }\r\n</style>\r\n","\r\nimport { defineComponent, inject, onMounted, ref, watch } from \"vue\";\r\nimport Card from \"../../../components/Elements/Card.vue\";\r\n// import Chart from \"../../../components/Chart/Chart.vue\";\r\n// import Input from \"../../../components/Elements/Input.vue\";\r\n// import DataTable from \"../../../components/Elements/Datatable.vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { GET } from \"../../../services/api\";\r\nimport ChartJs from \"chart.js\";\r\ninterface LoadImplements {\r\n  open: Function;\r\n  close: Function;\r\n}\r\n\r\nexport default defineComponent({\r\n  name: \"Home\",\r\n  components: {\r\n    Card,\r\n    // Chart,\r\n    // Input,\r\n    // DataTable,\r\n  },\r\n\r\n  setup() {\r\n    const headers = [\r\n      { key: \"Id\", value: \"id\" },\r\n      { key: \"Nome\", value: \"name\" },\r\n      { key: \"E-mail\", value: \"email\" },\r\n      { key: \"Data de aniversário\", value: \"birthday\", date: true },\r\n      { key: \"Ultimo pedido\", value: \"pedido\" },\r\n      { key: \"Data do pedido\", value: \"pedido\" },\r\n      { key: \"Options\", value: \"\" },\r\n    ];\r\n\r\n    const options = [{ icon: \"eye\", action: (param) => alert(param) }];\r\n\r\n    const loader: LoadImplements = inject(\"loading\") as LoadImplements;\r\n    const router = useRouter();\r\n    const users = ref([]);\r\n    const donations = ref([]);\r\n    const status = ref([\r\n      {\r\n        // color: \"#e823e5\",\r\n        // \"created_at\": null,\r\n        icon: \"user\",\r\n        id: 1,\r\n        name: \"Doadores\",\r\n        qtd: 0,\r\n        // \"updated_at\": null,\r\n      },\r\n      {\r\n        // color: \"#e823e5\",\r\n        // \"created_at\": null,\r\n        icon: \"card-hearts\",\r\n        id: 3,\r\n        name: \"Doações\",\r\n        qtd: 0,\r\n        // \"updated_at\": null,\r\n      },\r\n    ]);\r\n\r\n    const data = ref({});\r\n\r\n    const revenue = ref([0, 0]);\r\n    const ordersByUsers = ref([0, 0]);\r\n    const ordersByHours = ref([\r\n      {\r\n        Day: Number,\r\n        Hour: Number,\r\n        [\"count_orders\"]: Number,\r\n      },\r\n    ]);\r\n    const usersPerDay = ref([\r\n      {\r\n        Day: Number,\r\n        [\"new_users\"]: Number,\r\n      },\r\n    ]);\r\n\r\n    const ticket = ref([0, 0]);\r\n\r\n    const mes = ref();\r\n\r\n    const optionsGrafico = {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    const event = () => {\r\n      alert(\"ok\");\r\n    };\r\n\r\n    const reconstroiGraficos = () => {\r\n      const graficoFaturamento = document.getElementById(\r\n        \"1\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n\r\n      new ChartJs(graficoFaturamento, {\r\n        type: \"doughnut\",\r\n        data: {\r\n          labels: [\"Dinheiro\", \"Cartão\"],\r\n          datasets: [\r\n            {\r\n              label: `Quantidade de Faturamento`,\r\n              data: revenue.value,\r\n              backgroundColor: [\r\n                \"#1C74B4\",\r\n                \"#1C74B4aa\",\r\n                \"#1C74B4bb\",\r\n                \"#1C74B4cc\",\r\n              ],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n\r\n      const graficoTicket = document.getElementById(\r\n        \"2\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n\r\n      new ChartJs(graficoTicket, {\r\n        type: \"doughnut\",\r\n        data: {\r\n          labels: [\"Retirada\", \"Delivery\"],\r\n          datasets: [\r\n            {\r\n              label: `Quantidade de Entregas`,\r\n              data: ticket.value,\r\n              backgroundColor: [\r\n                \"#1C74B4\",\r\n                \"#1C74B4aa\",\r\n                \"#1C74B4bb\",\r\n                \"#1C74B4cc\",\r\n              ],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n\r\n      const graficoClientes = document.getElementById(\r\n        \"3\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n      new ChartJs(graficoClientes, {\r\n        type: \"doughnut\",\r\n        data: {\r\n          labels: [\"Novos\", \"Antigos\"],\r\n          datasets: [\r\n            {\r\n              label: `Quantidade de Clientes`,\r\n              data: ordersByUsers.value,\r\n              backgroundColor: [\r\n                \"#1C74B4\",\r\n                \"#1C74B4aa\",\r\n                \"#1C74B4bb\",\r\n                \"#1C74B4cc\",\r\n              ],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n\r\n      const hours: Array<string> = [];\r\n      const orders: Array<any> = [];\r\n\r\n      ordersByHours.value.forEach((order) => {\r\n        const hs = order.Hour.toString();\r\n        hours.push(hs);\r\n        orders.push(order[\"count_orders\"]);\r\n      });\r\n\r\n      const graficoPedidos = document.getElementById(\r\n        \"4\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n      new ChartJs(graficoPedidos, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: hours,\r\n          datasets: [\r\n            {\r\n              label: `Quantidade de Pedidos por hora`,\r\n              data: orders,\r\n              backgroundColor: [\"rgba(0,0,0,0)\"],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n\r\n      const days: Array<string> = [];\r\n      const newUsers: Array<any> = [];\r\n\r\n      usersPerDay.value.forEach((user) => {\r\n        const d = user.Day.toString();\r\n        days.push(d);\r\n        newUsers.push(user[\"new_users\"]);\r\n      });\r\n\r\n      const graficoNovosUsuarios = document.getElementById(\r\n        \"5\" || \"\"\r\n      ) as HTMLCanvasElement;\r\n      new ChartJs(graficoNovosUsuarios, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: days,\r\n          datasets: [\r\n            {\r\n              label: `Usuários novos`,\r\n              data: newUsers,\r\n              backgroundColor: [\"rgba(0,0,0,0)\"],\r\n              borderColor: [`#1C74B4aa`],\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: optionsGrafico,\r\n      });\r\n    };\r\n\r\n    onMounted(async () => {\r\n      loader.open();\r\n      \r\n      try {\r\n        const response = await GET(`/users/dashboard/cards`);\r\n        status.value[0].qtd = response.donators;\r\n        status.value[1].qtd = response.donations;\r\n        loader.close();\r\n      } catch (e) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('info');\r\n        router.push('/login');\r\n        loader.close();\r\n      }\r\n    });\r\n\r\n    watch(\r\n      () => mes.value,\r\n      async (mes) => {\r\n        const dataAtual = new Date();\r\n        const dataIso = dataAtual.toISOString();\r\n        const dataComMes = `${dataIso.split(\"-\")[0]}-${mes}-${\r\n          dataIso.split(\"-\")[2]\r\n        }`;\r\n        const response = await GET(`dashboard/${dataComMes}`);\r\n        data.value = response;\r\n        revenue.value[0] = parseFloat(response.revenue.money);\r\n        revenue.value[1] = parseFloat(response.revenue.card);\r\n        ordersByUsers.value[0] = response[\"orders_by_user\"][\"new_users\"];\r\n        ordersByUsers.value[1] = response[\"orders_by_user\"][\"old_users\"];\r\n        ordersByHours.value = response[\"orders_by_hour\"];\r\n        usersPerDay.value = response[\"new_users_per_day\"];\r\n        reconstroiGraficos();\r\n      }\r\n    );\r\n\r\n    return {\r\n      event,\r\n      data,\r\n      headers,\r\n      options,\r\n      users,\r\n      status,\r\n      revenue,\r\n      ticket,\r\n      ordersByUsers,\r\n      mes,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./index.vue?vue&type=template&id=495a625b&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=495a625b&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-495a625b\"\n\nexport default script"],"sourceRoot":""}